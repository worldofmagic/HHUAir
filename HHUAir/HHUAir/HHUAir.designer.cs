#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18051
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HHUAir
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HHUAirDB")]
	public partial class HHUAirDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAirport(Airport instance);
    partial void UpdateAirport(Airport instance);
    partial void DeleteAirport(Airport instance);
    partial void InsertModel(Model instance);
    partial void UpdateModel(Model instance);
    partial void DeleteModel(Model instance);
    partial void InsertTicket(Ticket instance);
    partial void UpdateTicket(Ticket instance);
    partial void DeleteTicket(Ticket instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    #endregion
		
		public HHUAirDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["HHUAirDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HHUAirDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HHUAirDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HHUAirDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HHUAirDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Airport> Airports
		{
			get
			{
				return this.GetTable<Airport>();
			}
		}
		
		public System.Data.Linq.Table<Model> Models
		{
			get
			{
				return this.GetTable<Model>();
			}
		}
		
		public System.Data.Linq.Table<Ticket> Tickets
		{
			get
			{
				return this.GetTable<Ticket>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Airports")]
	public partial class Airport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private string _City;
		
		private bool _IsRecommend;
		
		private EntitySet<Ticket> _Tickets;
		
		private EntitySet<Ticket> _Tickets1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnIsRecommendChanging(bool value);
    partial void OnIsRecommendChanged();
    #endregion
		
		public Airport()
		{
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			this._Tickets1 = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets1), new Action<Ticket>(this.detach_Tickets1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRecommend", DbType="Bit NOT NULL")]
		public bool IsRecommend
		{
			get
			{
				return this._IsRecommend;
			}
			set
			{
				if ((this._IsRecommend != value))
				{
					this.OnIsRecommendChanging(value);
					this.SendPropertyChanging();
					this._IsRecommend = value;
					this.SendPropertyChanged("IsRecommend");
					this.OnIsRecommendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Airport_Ticket", Storage="_Tickets", ThisKey="Name,City", OtherKey="ArrivalAirport,ArrivalCity")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Airport_Ticket1", Storage="_Tickets1", ThisKey="Name,City", OtherKey="DepartAirport,DepartCity")]
		public EntitySet<Ticket> Tickets1
		{
			get
			{
				return this._Tickets1;
			}
			set
			{
				this._Tickets1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Airport = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Airport = null;
		}
		
		private void attach_Tickets1(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Airport1 = this;
		}
		
		private void detach_Tickets1(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Airport1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Models")]
	public partial class Model : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private string _Type;
		
		private int _MinSeats;
		
		private int _MaxSeats;
		
		private EntitySet<Ticket> _Tickets;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnMinSeatsChanging(int value);
    partial void OnMinSeatsChanged();
    partial void OnMaxSeatsChanging(int value);
    partial void OnMaxSeatsChanged();
    #endregion
		
		public Model()
		{
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinSeats", DbType="Int NOT NULL")]
		public int MinSeats
		{
			get
			{
				return this._MinSeats;
			}
			set
			{
				if ((this._MinSeats != value))
				{
					this.OnMinSeatsChanging(value);
					this.SendPropertyChanging();
					this._MinSeats = value;
					this.SendPropertyChanged("MinSeats");
					this.OnMinSeatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxSeats", DbType="Int NOT NULL")]
		public int MaxSeats
		{
			get
			{
				return this._MaxSeats;
			}
			set
			{
				if ((this._MaxSeats != value))
				{
					this.OnMaxSeatsChanging(value);
					this.SendPropertyChanging();
					this._MaxSeats = value;
					this.SendPropertyChanged("MaxSeats");
					this.OnMaxSeatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Model_Ticket", Storage="_Tickets", ThisKey="Name", OtherKey="ModelName")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Model = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Model = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tickets")]
	public partial class Ticket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FlightNumber;
		
		private string _DepartAirport;
		
		private string _ArrivalAirport;
		
		private string _DepartCity;
		
		private string _ArrivalCity;
		
		private System.DateTime _DepartDatetime;
		
		private System.DateTime _ArrivalDatetime;
		
		private string _ModelName;
		
		private decimal _OriginalPrice;
		
		private decimal _CurrentPrice;
		
		private int _Amount;
		
		private int _SoldAmount;
		
		private bool _IsRecommend;
		
		private string _Memo;
		
		private EntitySet<Order> _Orders;
		
		private EntityRef<Airport> _Airport;
		
		private EntityRef<Airport> _Airport1;
		
		private EntityRef<Model> _Model;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFlightNumberChanging(string value);
    partial void OnFlightNumberChanged();
    partial void OnDepartAirportChanging(string value);
    partial void OnDepartAirportChanged();
    partial void OnArrivalAirportChanging(string value);
    partial void OnArrivalAirportChanged();
    partial void OnDepartCityChanging(string value);
    partial void OnDepartCityChanged();
    partial void OnArrivalCityChanging(string value);
    partial void OnArrivalCityChanged();
    partial void OnDepartDatetimeChanging(System.DateTime value);
    partial void OnDepartDatetimeChanged();
    partial void OnArrivalDatetimeChanging(System.DateTime value);
    partial void OnArrivalDatetimeChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    partial void OnOriginalPriceChanging(decimal value);
    partial void OnOriginalPriceChanged();
    partial void OnCurrentPriceChanging(decimal value);
    partial void OnCurrentPriceChanged();
    partial void OnAmountChanging(int value);
    partial void OnAmountChanged();
    partial void OnSoldAmountChanging(int value);
    partial void OnSoldAmountChanged();
    partial void OnIsRecommendChanging(bool value);
    partial void OnIsRecommendChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    #endregion
		
		public Ticket()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Airport = default(EntityRef<Airport>);
			this._Airport1 = default(EntityRef<Airport>);
			this._Model = default(EntityRef<Model>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlightNumber", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FlightNumber
		{
			get
			{
				return this._FlightNumber;
			}
			set
			{
				if ((this._FlightNumber != value))
				{
					this.OnFlightNumberChanging(value);
					this.SendPropertyChanging();
					this._FlightNumber = value;
					this.SendPropertyChanged("FlightNumber");
					this.OnFlightNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartAirport", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string DepartAirport
		{
			get
			{
				return this._DepartAirport;
			}
			set
			{
				if ((this._DepartAirport != value))
				{
					if (this._Airport1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartAirportChanging(value);
					this.SendPropertyChanging();
					this._DepartAirport = value;
					this.SendPropertyChanged("DepartAirport");
					this.OnDepartAirportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalAirport", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ArrivalAirport
		{
			get
			{
				return this._ArrivalAirport;
			}
			set
			{
				if ((this._ArrivalAirport != value))
				{
					if (this._Airport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArrivalAirportChanging(value);
					this.SendPropertyChanging();
					this._ArrivalAirport = value;
					this.SendPropertyChanged("ArrivalAirport");
					this.OnArrivalAirportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartCity", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string DepartCity
		{
			get
			{
				return this._DepartCity;
			}
			set
			{
				if ((this._DepartCity != value))
				{
					if (this._Airport1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartCityChanging(value);
					this.SendPropertyChanging();
					this._DepartCity = value;
					this.SendPropertyChanged("DepartCity");
					this.OnDepartCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalCity", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ArrivalCity
		{
			get
			{
				return this._ArrivalCity;
			}
			set
			{
				if ((this._ArrivalCity != value))
				{
					if (this._Airport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArrivalCityChanging(value);
					this.SendPropertyChanging();
					this._ArrivalCity = value;
					this.SendPropertyChanged("ArrivalCity");
					this.OnArrivalCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartDatetime", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DepartDatetime
		{
			get
			{
				return this._DepartDatetime;
			}
			set
			{
				if ((this._DepartDatetime != value))
				{
					this.OnDepartDatetimeChanging(value);
					this.SendPropertyChanging();
					this._DepartDatetime = value;
					this.SendPropertyChanged("DepartDatetime");
					this.OnDepartDatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalDatetime", DbType="DateTime NOT NULL")]
		public System.DateTime ArrivalDatetime
		{
			get
			{
				return this._ArrivalDatetime;
			}
			set
			{
				if ((this._ArrivalDatetime != value))
				{
					this.OnArrivalDatetimeChanging(value);
					this.SendPropertyChanging();
					this._ArrivalDatetime = value;
					this.SendPropertyChanged("ArrivalDatetime");
					this.OnArrivalDatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					if (this._Model.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalPrice", DbType="Money NOT NULL")]
		public decimal OriginalPrice
		{
			get
			{
				return this._OriginalPrice;
			}
			set
			{
				if ((this._OriginalPrice != value))
				{
					this.OnOriginalPriceChanging(value);
					this.SendPropertyChanging();
					this._OriginalPrice = value;
					this.SendPropertyChanged("OriginalPrice");
					this.OnOriginalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPrice", DbType="Money NOT NULL")]
		public decimal CurrentPrice
		{
			get
			{
				return this._CurrentPrice;
			}
			set
			{
				if ((this._CurrentPrice != value))
				{
					this.OnCurrentPriceChanging(value);
					this.SendPropertyChanging();
					this._CurrentPrice = value;
					this.SendPropertyChanged("CurrentPrice");
					this.OnCurrentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int NOT NULL")]
		public int Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldAmount", DbType="Int NOT NULL")]
		public int SoldAmount
		{
			get
			{
				return this._SoldAmount;
			}
			set
			{
				if ((this._SoldAmount != value))
				{
					this.OnSoldAmountChanging(value);
					this.SendPropertyChanging();
					this._SoldAmount = value;
					this.SendPropertyChanged("SoldAmount");
					this.OnSoldAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRecommend", DbType="Bit NOT NULL")]
		public bool IsRecommend
		{
			get
			{
				return this._IsRecommend;
			}
			set
			{
				if ((this._IsRecommend != value))
				{
					this.OnIsRecommendChanging(value);
					this.SendPropertyChanging();
					this._IsRecommend = value;
					this.SendPropertyChanged("IsRecommend");
					this.OnIsRecommendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(100)")]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Order", Storage="_Orders", ThisKey="FlightNumber,DepartDatetime", OtherKey="FlightNumber,DepartDatetime")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Airport_Ticket", Storage="_Airport", ThisKey="ArrivalAirport,ArrivalCity", OtherKey="Name,City", IsForeignKey=true)]
		public Airport Airport
		{
			get
			{
				return this._Airport.Entity;
			}
			set
			{
				Airport previousValue = this._Airport.Entity;
				if (((previousValue != value) 
							|| (this._Airport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Airport.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Airport.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._ArrivalAirport = value.Name;
						this._ArrivalCity = value.City;
					}
					else
					{
						this._ArrivalAirport = default(string);
						this._ArrivalCity = default(string);
					}
					this.SendPropertyChanged("Airport");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Airport_Ticket1", Storage="_Airport1", ThisKey="DepartAirport,DepartCity", OtherKey="Name,City", IsForeignKey=true)]
		public Airport Airport1
		{
			get
			{
				return this._Airport1.Entity;
			}
			set
			{
				Airport previousValue = this._Airport1.Entity;
				if (((previousValue != value) 
							|| (this._Airport1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Airport1.Entity = null;
						previousValue.Tickets1.Remove(this);
					}
					this._Airport1.Entity = value;
					if ((value != null))
					{
						value.Tickets1.Add(this);
						this._DepartAirport = value.Name;
						this._DepartCity = value.City;
					}
					else
					{
						this._DepartAirport = default(string);
						this._DepartCity = default(string);
					}
					this.SendPropertyChanged("Airport1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Model_Ticket", Storage="_Model", ThisKey="ModelName", OtherKey="Name", IsForeignKey=true)]
		public Model Model
		{
			get
			{
				return this._Model.Entity;
			}
			set
			{
				Model previousValue = this._Model.Entity;
				if (((previousValue != value) 
							|| (this._Model.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Model.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Model.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._ModelName = value.Name;
					}
					else
					{
						this._ModelName = default(string);
					}
					this.SendPropertyChanged("Model");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Ticket = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Ticket = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _FlightNumber;
		
		private System.DateTime _DepartDatetime;
		
		private int _Amount;
		
		private System.Guid _UserId;
		
		private string _PassengerNames;
		
		private string _PassengerIds;
		
		private string _ContactInfo;
		
		private string _Memo;
		
		private EntityRef<Ticket> _Ticket;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnFlightNumberChanging(string value);
    partial void OnFlightNumberChanged();
    partial void OnDepartDatetimeChanging(System.DateTime value);
    partial void OnDepartDatetimeChanged();
    partial void OnAmountChanging(int value);
    partial void OnAmountChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPassengerNamesChanging(string value);
    partial void OnPassengerNamesChanged();
    partial void OnPassengerIdsChanging(string value);
    partial void OnPassengerIdsChanged();
    partial void OnContactInfoChanging(string value);
    partial void OnContactInfoChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    #endregion
		
		public Order()
		{
			this._Ticket = default(EntityRef<Ticket>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlightNumber", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string FlightNumber
		{
			get
			{
				return this._FlightNumber;
			}
			set
			{
				if ((this._FlightNumber != value))
				{
					if (this._Ticket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFlightNumberChanging(value);
					this.SendPropertyChanging();
					this._FlightNumber = value;
					this.SendPropertyChanged("FlightNumber");
					this.OnFlightNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartDatetime", DbType="DateTime NOT NULL")]
		public System.DateTime DepartDatetime
		{
			get
			{
				return this._DepartDatetime;
			}
			set
			{
				if ((this._DepartDatetime != value))
				{
					if (this._Ticket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartDatetimeChanging(value);
					this.SendPropertyChanging();
					this._DepartDatetime = value;
					this.SendPropertyChanged("DepartDatetime");
					this.OnDepartDatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int NOT NULL")]
		public int Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassengerNames", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PassengerNames
		{
			get
			{
				return this._PassengerNames;
			}
			set
			{
				if ((this._PassengerNames != value))
				{
					this.OnPassengerNamesChanging(value);
					this.SendPropertyChanging();
					this._PassengerNames = value;
					this.SendPropertyChanged("PassengerNames");
					this.OnPassengerNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassengerIds", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PassengerIds
		{
			get
			{
				return this._PassengerIds;
			}
			set
			{
				if ((this._PassengerIds != value))
				{
					this.OnPassengerIdsChanging(value);
					this.SendPropertyChanging();
					this._PassengerIds = value;
					this.SendPropertyChanged("PassengerIds");
					this.OnPassengerIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactInfo", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactInfo
		{
			get
			{
				return this._ContactInfo;
			}
			set
			{
				if ((this._ContactInfo != value))
				{
					this.OnContactInfoChanging(value);
					this.SendPropertyChanging();
					this._ContactInfo = value;
					this.SendPropertyChanged("ContactInfo");
					this.OnContactInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(100)")]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Order", Storage="_Ticket", ThisKey="FlightNumber,DepartDatetime", OtherKey="FlightNumber,DepartDatetime", IsForeignKey=true)]
		public Ticket Ticket
		{
			get
			{
				return this._Ticket.Entity;
			}
			set
			{
				Ticket previousValue = this._Ticket.Entity;
				if (((previousValue != value) 
							|| (this._Ticket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Ticket.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._FlightNumber = value.FlightNumber;
						this._DepartDatetime = value.DepartDatetime;
					}
					else
					{
						this._FlightNumber = default(string);
						this._DepartDatetime = default(System.DateTime);
					}
					this.SendPropertyChanged("Ticket");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Order", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntitySet<Order> _Orders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Order", Storage="_Orders", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
}
#pragma warning restore 1591
